
{# 下面是自定义的初始化 #}

{# 3D 标签云 #}
<script src="https://www.goat1000.com/tagcanvas.min.js"></script>
<script src="/js/tagcloud3D.js"></script>

{# 看板娘 #}
<script>
  const cdnPath = "https://cdn.jsdelivr.net/gh/letere-gzj/live2d-widget-v3@main";
  const config = {
    // 资源路径
    path: {
      homePath: "/",
      modelPath: "/live2d/resources/",
      cssPath: "/live2d/waifu.css",
      tipsJsonPath: "/live2d/waifu-tips.json",
      tipsJsPath: "/live2d/waifu-tips.js",
      live2dCorePath: cdnPath + "/Core/live2dcubismcore.js",
      live2dSdkPath: cdnPath + "/live2d-sdk.js"
    },
    // 工具栏
    tools: ["hitokoto", "asteroids", "express", "switch-model", "switch-texture", "photo", "info", "quit"],
    // 模型拖拽
    drag: {
      enable: false,
      direction: ["x", "y"]
    },
    // 模型缩放
    resize: {
      defaultScale: 0.6,
      minScale: 0.2,
      step: 0.1,
      origin: "left bottom"
    },
    // 模型切换(order: 顺序切换，random: 随机切换)
    switchType: "order"
  }

  // 加载资源并初始化
  if (screen.width >= 768) {
    Promise.all([
      loadExternalResource(config.path.cssPath, "css"),
      loadExternalResource(config.path.live2dCorePath, "js"),
      loadExternalResource(config.path.live2dSdkPath, "js"),
      loadExternalResource(config.path.tipsJsPath, "js")
    ]).then(() => {
      initWidget({
        waifuPath: config.path.tipsJsonPath,
        cdnPath: config.path.modelPath,
        tools: config.tools,
        dragEnable: config.drag.enable,
        dragDirection: config.drag.direction,
        switchType: config.switchType
      });
      initResize({
        defaultScale: config.resize.defaultScale,
        minScale: config.resize.minScale,
        step: config.resize.step,
        origin: config.resize.origin
      });
    });
  }

  // 异步加载资源
  function loadExternalResource(url, type) {
    return new Promise((resolve, reject) => {
      let tag;
      if (type === "css") {
        tag = document.createElement("link");
        tag.rel = "stylesheet";
        tag.href = url;
      }
      else if (type === "js") {
        tag = document.createElement("script");
        tag.src = url;
      }
      if (tag) {
        tag.onload = () => resolve(url);
        tag.onerror = () => reject(url);
        document.head.appendChild(tag);
      }
    });
  }
</script>

{# 动态背景线条动画 #}
<script type="text/javascript"
        color="255,255,255"
        opacity="0.9"
        zIndex="-10"
        count="200"
        src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js">
</script>
<style>
  canvas.canvas-nest-canvas {
    filter:
      drop-shadow(0 0 10px rgba(255,255,255,1))
      drop-shadow(0 0 18px rgba(255,255,255,0.8))
      drop-shadow(0 0 28px rgba(255,255,255,0.6));
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    pointer-events: none;
    z-index: -2;
  }
</style>

{# 点击烟花特效 #}
<canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" ></canvas> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
<script type="text/javascript" src="/js/fireworks.js"></script>

{# 背景时钟 #}
<link rel="stylesheet" href="/tryment-clock/TrymenT-ClocK.css">
<script src="/tryment-clock/TrymenT-ClocK.js"></script>